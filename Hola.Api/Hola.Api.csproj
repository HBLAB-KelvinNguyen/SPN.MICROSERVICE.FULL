<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AutoMapper" Version="12.0.1" />
        <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.1" />
        <PackageReference Include="AWSSDK.Core" Version="3.7.106.28" />
        <PackageReference Include="Azure.Storage.Blobs" Version="12.16.0" />
        <PackageReference Include="Dapper" Version="2.0.123" />
        <PackageReference Include="EPPlus" Version="6.2.2" />
        <PackageReference Include="FirebaseAdmin" Version="2.3.0" />
        <PackageReference Include="itext7" Version="7.2.5" />
        <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="11.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="7.0.5" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Versioning" Version="5.0.0" />
        <PackageReference Include="Microsoft.Data.Sqlite.Core" Version="7.0.5" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="7.0.5">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.5">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.Caching.StackExchangeRedis" Version="7.0.5" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="7.0.0" />
        <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.18.1" />
        <PackageReference Include="OpenAI" Version="1.7.2" />
        <PackageReference Include="Quartz" Version="3.6.2" />
        <PackageReference Include="Quartz.Extensions.Hosting" Version="3.6.2" />
        <PackageReference Include="Sentry.AspNetCore" Version="3.30.0" />
        <PackageReference Include="StackExchange.Redis" Version="2.6.104" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
        <PackageReference Include="System.Collections" Version="4.3.0" />
        <PackageReference Include="System.Text.Encoding" Version="4.3.0" />
        <PackageReference Include="System.Text.Encoding.CodePages" Version="7.0.0" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\DatabaseCore.Infrastructure\DatabaseCore.Infrastructure.csproj" />
      <ProjectReference Include="..\EntitiesCommon\EntitiesCommon.csproj" />
      <ProjectReference Include="..\Hola.Core\Hola.Core.csproj" />
      <ProjectReference Include="..\Hola.GoogleCloudStorage\Hola.GoogleCloudStorage.csproj" />
      <ProjectReference Include="..\SPNApplication\SPNApplication.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Compile Remove="Controllers\WeatherForecastController.cs" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="Models\NewFolder\" />
      <Folder Include="Requests\Users\NewFolder\" />
      <Folder Include="Service\BAConvertXml\" />
      <Folder Include="wwwroot\" />
    </ItemGroup>

    <ItemGroup>
      <Content Update="credentials.json">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </Content>
      <Content Update="key.json">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </Content>
    </ItemGroup>
<PropertyGroup>
  <GenerateDocumentationFile>true</GenerateDocumentationFile>
  <NoWarn>$(NoWarn);1591</NoWarn>
  <UserSecretsId>7711ac9d-4ac6-490a-9fb4-5e6b64c39157</UserSecretsId>
  <DockerComposeProjectPath>..\docker-compose.dcproj</DockerComposeProjectPath>
</PropertyGroup>
</Project>
